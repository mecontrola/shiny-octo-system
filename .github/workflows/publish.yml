name: Publish

on:
  pull_request:
    branches: [ main, develop ]
    
env:
  app-package-directory: 'AHM Report'
  path-publish: './Stefanini.ViaReport/bin/Release/net6.0-windows/publish'
  certificate-name: 'AppCertificate.pfx'
  app-version: '1.0.0.5'

jobs:
  publish-x86:
    runs-on: windows-latest
    strategy:
      matrix:
        dotnet-version: [ '6.0.x' ]
        build-configuration: [ 'Release' ]

    steps:
    - name: Checkout
      uses: actions/checkout@master
      
    - name: Setup .NET ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Publish project
      run: dotnet publish --nologo --self-contained -r win-x86 -p:PublishProfile=Publish_Win-x86 -p:DebugType=None -p:DebugSymbols=false -p:Optimize=true -p:AssemblyVersion=${{ env.app-version }} -p:FileVersion=${{ env.app-version }}

    - name: Decode the Pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.BASE64_ENCODED_PFX }}")
        $currentDirectory = Get-Location
        $certificatePath = Join-Path -Path $currentDirectory -ChildPath ${{ env.path-publish }} -AdditionalChildPath ${{ env.certificate-name }}
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    - name: Sign the app with Pfx
      run: signtool sign /f '${{ env.certificate-name }}' /p ${{ secrets.CERTIFICATE_PASSWORD }} /fd SHA256 '${{ env.path-publish }}/AHM Report.exe'
      
    - name: Remove the .pfx
      run: Remove-Item -path '${{ env.path-publish }}\${{ env.certificate-name }}

    # Upload the MSIX package: https://github.com/marketplace/actions/upload-artifact
    - name: Upload build artifacts
      uses: actions/upload-artifact@v1
      with:
        name: MSIX Package
        path: ${{ env.path-publish }}\${{ env.app-package-directory }}